# .github/workflows/ci-cd.yml

name: Django CI/CD Pipeline

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Ensure this matches your local Python version

      # 3. Cache pip dependencies to speed up builds
      - name: Cache pip Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies using pip
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
        working-directory: ./  # Root directory

      # 5. Run Django tests
      - name: Run Tests
        run: python backend/manage.py test
        working-directory: ./  # Root directory

      # 6. Collect static files
      - name: Collect Static Files
        run: python backend/manage.py collectstatic --noinput
        working-directory: ./  # Root directory

      # 7. Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}  # Ensure this secret is set
          publish-profile: ${{ secrets.AZURE_WEBAPP }}  # Publish profile stored as a secret
          package: ./backend  # Path to your application package

      # 8. Optional: Notify Deployment Status
      - name: Notify Deployment Status
        if: success()
        run: echo "Deployment to Azure Web App succeeded!"

      # 9. Optional: List Installed Packages for Debugging
      - name: List Installed Packages
        run: pip list
        working-directory: ./backend
